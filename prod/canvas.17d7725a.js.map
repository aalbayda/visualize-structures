{"version":3,"sources":["canvas.js"],"names":["canvas","document","querySelector","width","window","innerWidth","height","innerHeight","stack","c","getContext","Pointer","x1","y1","x2","y2","direction","console","log","update","draw","beginPath","moveTo","lineTo","stroke","closePath","Node","x","y","r","moveUp","moveDown","moveLeft","moveRight","arc","Math","PI","fillStyle","shadowOffsetX","shadowOffsetY","shadowBlur","fill","head","newHead","animateHead","id","requestAnimationFrame","getElementById","disabled","font","fillText","cancelAnimationFrame","setTitle","structType","clearRect","Stack","elements","push","e","pop","length","peek","isEmpty","newStack","innerHTML","data","node","p","round","random","animateNode","animatePointer","cos","sin","deleteNode","animate","fromX","fromY","Queue","enqueue","unshift","dequeue","getFront"],"mappings":"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","file":"canvas.17d7725a.js","sourceRoot":"..","sourcesContent":["// Initialize canvas\r\nlet canvas = document.querySelector('canvas');\r\ncanvas.width = window.innerWidth-200;\r\ncanvas.height = window.innerHeight;\r\nlet c = canvas.getContext('2d');\r\n\r\n// Pointer class\r\nclass Pointer {\r\n    constructor(x1, y1, x2, y2, direction) {\r\n        this.direction = direction;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        if (this.direction == \"right\" || this.direction == \"left\") {\r\n            this.x2 = this.x1;\r\n        }\r\n        else {\r\n            this.x2 = x2;\r\n        }\r\n        if (this.direction == \"up\" || this.direction == \"down\") {\r\n            \r\n            this.y2 = this.y1;\r\n        }\r\n        else {\r\n            this.y2 = y2;\r\n        }\r\n        console.log(\"Initial y2 is \"+this.y2)\r\n        this.update = () => {\r\n            if (this.direction == \"right\")\r\n                this.x2 += 10;\r\n            else if (this.direction == \"left\")\r\n                this.x2 -= 10;\r\n            else if (this.direction == \"up\")\r\n                this.y2 -= 10;\r\n            else if (this.direction == \"down\")\r\n                this.y2 += 10;\r\n            this.draw();\r\n        }\r\n        this.draw = () => {\r\n            console.log('drawing '+this)\r\n            c.beginPath();\r\n            c.moveTo(this.x1, this.y1);\r\n            c.lineTo(this.x2, this.y2);\r\n            c.stroke();\r\n            c.closePath();\r\n        }\r\n    }\r\n}\r\n\r\n// Node class\r\nclass Node { // circular head node\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.r = 0; // Radius\r\n        this.update = () => {\r\n            this.r += 1;\r\n            this.draw();\r\n        }\r\n        this.moveUp = () => {\r\n            this.y -=1;\r\n        }\r\n        this.moveDown = () => {\r\n            this.y += 1;\r\n        }\r\n        this.moveLeft = () => {\r\n            this.x -= 1;\r\n        }\r\n        this.moveRight = () => {\r\n            this.x += 1;\r\n        }\r\n        this.draw = () => {\r\n            c.beginPath();\r\n            c.arc(this.x, this.y, this.r, 0, Math.PI*2, false);\r\n            c.fillStyle = \"#729454\"\r\n            c.shadowOffsetX = c.shadowOffsetY = 5;\r\n            c.shadowBlur = 6;\r\n            c.fill();\r\n            c.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nlet head = new Node(canvas.width/2, 150); // Global head\r\n\r\n// Head\r\nconst newHead = () => {\r\n    const animateHead = () => {\r\n        let id = requestAnimationFrame(animateHead);\r\n        if (head.r <= 20) {\r\n            head.update();\r\n        }\r\n        else {          \r\n            c.beginPath();\r\n            c.fillStyle = \"#000000\";\r\n            c.arc(head.x, head.y, 5, 0, Math.PI*2, false);\r\n            c.fill();\r\n            document.getElementById('btn-push').disabled = false;  \r\n            c.font = \"16px Helvetica\";\r\n            c.fillText(\"Head (top)\", head.x-100, head.y-20);\r\n            cancelAnimationFrame(id);\r\n        }\r\n    }\r\n    animateHead();\r\n}\r\n\r\nconst setTitle = (structType) => {\r\n    c.clearRect(0, 0, canvas.width, canvas.height)\r\n    c.font = \"30px Helvetica, Arial, sans-serif\";\r\n    c.fillText(structType, canvas.width/2, 80);\r\n}\r\n\r\n// Stack class\r\nclass Stack {\r\n    constructor() {\r\n        this.elements = [];\r\n        this.push = (e) => {\r\n            this.elements.push(e);\r\n        };\r\n        this.pop = () => {\r\n            if (this.elements.length == 0)\r\n                return \"Underflow\";\r\n            return this.elements.pop();\r\n        };\r\n        this.peek = () => {\r\n            return this.elements[this.elements.length-1];\r\n        };\r\n        this.isEmpty = () => {\r\n            return this.elements.length == 0;\r\n        };\r\n    }\r\n}\r\n\r\nlet stack;\r\nconst newStack = () => {\r\n    stack = new Stack();\r\n    stack.push(head);\r\n    c.clearRect(0, 0, canvas.width, canvas.height);\r\n    setTitle(\"Stack\");\r\n    newHead();\r\n    document.querySelector('textarea').innerHTML = `\r\ntypedef struct Node {\r\n    int data;\r\n    struct* next;\r\n} NODE;\r\n\r\nNODE* head = (NODE*)malloc(sizeof(NODE));\r\nhead = NULL;\r\n    `;\r\n}\r\nconst push = (e) => {\r\n    let data = Math.round((Math.random()*100)+1);\r\n    console.log(stack.isEmpty())\r\n    let node, p;\r\n    if (stack.isEmpty()) {\r\n        node = new Node(head.x, head.y+100);\r\n        document.getElementById('btn-push').disabled = false;\r\n\r\n        document.querySelector('textarea').innerHTML = `\r\nvoid push(NODE* head, int data) {\r\n    NODE* newNode =  (NODE*)malloc(sizeof(NODE));\r\n    newNode->data = data;\r\n    newNode->next = head;\r\n    head = newNode;\r\n}\r\npush(head, ${data});\r\n`\r\n    }\r\n    else {\r\n        node = new Node(stack.peek().x, stack.peek().y+100);\r\n\r\n        document.querySelector('textarea').innerHTML = `\r\nvoid push(NODE* head, int data) {\r\n    NODE* newNode =  (NODE*)malloc(sizeof(NODE));\r\n    newNode->data = data;\r\n    newNode->next = head;\r\n    head = newNode;\r\n}\r\npush(head, ${data});\r\n`\r\n    }\r\n    const animatePointer = () => {\r\n        let id = requestAnimationFrame(animatePointer);\r\n        if (p.y2 <= node.y-15) {\r\n            console.log(p.y2)\r\n            p.update();\r\n        }\r\n        else {\r\n            c.beginPath();\r\n            c.moveTo(p.x2, p.y2);\r\n            c.lineTo(p.x2+5*Math.cos(45), p.y2-5*Math.sin(45)); // Right arrowhead\r\n            c.stroke();\r\n            c.closePath();\r\n            c.beginPath();\r\n            c.moveTo(p.x2, p.y2);\r\n            c.lineTo(p.x2-5*Math.cos(45), p.y2-5*Math.sin(45)); // Left arrowhead\r\n            c.stroke();\r\n            c.closePath();\r\n\r\n            // Enable pop\r\n            document.getElementById('btn-pop').disabled = false;\r\n            cancelAnimationFrame(id);\r\n        }\r\n    }\r\n\r\n    const animateNode = () => {\r\n        let id = requestAnimationFrame(animateNode);\r\n        if (node.r <= 20) {\r\n            node.update();\r\n            document.getElementById('btn-push').disabled = true;\r\n        }\r\n        else {\r\n            c.beginPath();\r\n            c.fillStyle = \"#000000\";\r\n            c.arc(node.x, node.y, 5, 0, Math.PI*2, false);\r\n            c.fill();\r\n            // Pointer to NULL\r\n            c.beginPath();\r\n            c.fillStyle = \"#000000\";\r\n            c.arc(node.x, node.y, 5, 0, Math.PI*2, false);\r\n            c.fill();\r\n\r\n            // Pointer to arrow\r\n            p = new Pointer(stack.peek().x, stack.peek().y, node.x, node.y-15, \"down\");\r\n\r\n            animatePointer();\r\n\r\n            // Label\r\n            c.font = \"16px Helvetica\";\r\n            c.fillText(`int data = ${data};`, node.x-130, node.y-20);\r\n            cancelAnimationFrame(id);\r\n            stack.push(node);\r\n            document.getElementById('btn-push').disabled = false;\r\n            if (stack.elements.length == 8)\r\n                document.getElementById('btn-push').disabled = true;\r\n        }\r\n        \r\n    }\r\n    c.clearRect(stack.peek().x, stack.peek().y+50, canvas.width, canvas.height);\r\n    c.clearRect(stack.peek().x, stack.peek().y+50, -canvas.width, canvas.height);\r\n    animateNode();\r\n\r\n    \r\n}\r\n\r\nconst deleteNode = () => {\r\n    let r = 1;\r\n    const animate = () => {\r\n        let id = requestAnimationFrame(animate);\r\n        console.log(r)\r\n        if (r <= 20) {\r\n            document.getElementById('btn-pop').disabled = true;\r\n            r += 0.5;\r\n            c.beginPath();\r\n            c.arc(stack.peek().x, stack.peek().y, r, 0, Math.PI*2, false);\r\n            c.fillStyle = \"#FF0000\";\r\n            c.fill();\r\n        }\r\n        else {\r\n            // Erase\r\n            cancelAnimationFrame(id);\r\n            c.clearRect(stack.peek().x, stack.peek().y, canvas.width, canvas.height);\r\n            c.clearRect(stack.peek().x, stack.peek().y, -canvas.width, canvas.height);\r\n            c.clearRect(stack.peek().x, stack.peek().y, -canvas.width, -45);\r\n            c.clearRect(stack.peek().x, stack.peek().y, canvas.width, -45);\r\n\r\n            // New arrowheads\r\n            let fromX = stack.peek().x, fromY = stack.peek().y;\r\n            c.beginPath();\r\n            c.moveTo(fromX, fromY-45);\r\n            c.lineTo(fromX+5*Math.cos(45), (fromY-45)-5*Math.sin(45)); // Right arrowhead\r\n            c.stroke();\r\n            c.closePath();\r\n            c.beginPath();\r\n            c.moveTo(fromX, fromY-45);\r\n            c.lineTo(fromX-5*Math.cos(45), (fromY-45)-5*Math.sin(45)); // Left arrowhead\r\n            c.stroke();\r\n            c.closePath();\r\n\r\n            // \"NULL\"\r\n            c.fillText(\"NULL\", fromX-10, fromY-30);\r\n\r\n            stack.pop();\r\n\r\n            if (stack.elements.length > 1)\r\n                document.getElementById('btn-pop').disabled = false;\r\n\r\n            c.fillStyle = \"#000\"\r\n        }\r\n    }\r\n    animate();\r\n}\r\n\r\nconst pop = () => {\r\n    deleteNode();\r\n    document.querySelector('textarea').innerHTML = `\r\nint pop(NODE** head) {\r\n    STACK* temp = *head; \r\n    *head = (*head)->next; \r\n    int data = temp->data; \r\n    free(temp); \r\n    return data; \r\n} \r\npop(&head);\r\n`\r\n    if (stack.elements.length < 8)\r\n        document.getElementById('btn-push').disabled = false;\r\n}\r\n\r\n/* QUEUES */\r\n\r\nclass Queue {\r\n    constructor() {\r\n        this.elements = [];\r\n        this.enqueue = (e) => {\r\n            this.elements.unshift(e);\r\n        };\r\n        this.dequeue = () => {\r\n            return this.elements.pop();\r\n        };\r\n        this.getFront = () => {\r\n            return this.elements[0];\r\n        };\r\n        this.isEmpty = () => {\r\n            return this.elements.length == 0;\r\n        };\r\n    }\r\n}\r\n\r\n// const enqueue = (e) => {\r\n//     let data = Math.round((Math.random()*100)+1);\r\n//     console.log(queue.isEmpty())\r\n//     let node, p;\r\n//     if (queue.isEmpty()) {\r\n//         node = new Node(head.x, head.y+100);\r\n//         document.getElementById('btn-push').disabled = false;\r\n\r\n//         document.querySelector('textarea').innerHTML = `\r\n// void enqueue(NODE* tail, int data) {\r\n//     NODE* newNode =  (NODE*)malloc(sizeof(NODE));\r\n//     newNode->data = data;\r\n//     tail->next = newNode;\r\n//     tail = newNode;\r\n// }\r\n// enqueue(tail, ${data});\r\n// `\r\n//     }\r\n//     else {\r\n//         node = new Node(stack.peek().x, stack.peek().y+100);\r\n\r\n//         document.querySelector('textarea').innerHTML = `\r\n// void push(NODE* head, int data) {\r\n//     NODE* newNode =  (NODE*)malloc(sizeof(NODE));\r\n//     newNode->data = data;\r\n//     newNode->next = head;\r\n//     head = newNode;\r\n// }\r\n// push(head, ${data});\r\n// `\r\n//     }\r\n//     const animatePointer = () => {\r\n//         let id = requestAnimationFrame(animatePointer);\r\n//         if (p.y2 <= node.y-15) {\r\n//             console.log(p.y2)\r\n//             p.update();\r\n//         }\r\n//         else {\r\n//             c.beginPath();\r\n//             c.moveTo(p.x2, p.y2);\r\n//             c.lineTo(p.x2+5*Math.cos(45), p.y2-5*Math.sin(45)); // Right arrowhead\r\n//             c.stroke();\r\n//             c.closePath();\r\n//             c.beginPath();\r\n//             c.moveTo(p.x2, p.y2);\r\n//             c.lineTo(p.x2-5*Math.cos(45), p.y2-5*Math.sin(45)); // Left arrowhead\r\n//             c.stroke();\r\n//             c.closePath();\r\n\r\n//             // Enable pop\r\n//             document.getElementById('btn-pop').disabled = false;\r\n//             cancelAnimationFrame(id);\r\n//         }\r\n//     }\r\n\r\n//     const animateNode = () => {\r\n//         let id = requestAnimationFrame(animateNode);\r\n//         if (node.r <= 20) {\r\n//             node.update();\r\n//             document.getElementById('btn-push').disabled = true;\r\n//         }\r\n//         else {\r\n//             c.beginPath();\r\n//             c.fillStyle = \"#000000\";\r\n//             c.arc(node.x, node.y, 5, 0, Math.PI*2, false);\r\n//             c.fill();\r\n//             // Pointer to NULL\r\n//             c.beginPath();\r\n//             c.fillStyle = \"#000000\";\r\n//             c.arc(node.x, node.y, 5, 0, Math.PI*2, false);\r\n//             c.fill();\r\n\r\n//             // Pointer to arrow\r\n//             p = new Pointer(stack.peek().x, stack.peek().y, node.x, node.y-15, \"down\");\r\n\r\n//             animatePointer();\r\n\r\n//             // Label\r\n//             c.font = \"16px Helvetica\";\r\n//             c.fillText(`int data = ${data};`, node.x-130, node.y-20);\r\n//             cancelAnimationFrame(id);\r\n//             stack.push(node);\r\n//             document.getElementById('btn-push').disabled = false;\r\n//             if (stack.elements.length == 8)\r\n//                 document.getElementById('btn-push').disabled = true;\r\n//         }\r\n        \r\n//     }\r\n//     c.clearRect(stack.peek().x, stack.peek().y+50, canvas.width, canvas.height);\r\n//     c.clearRect(stack.peek().x, stack.peek().y+50, -canvas.width, canvas.height);\r\n//     animateNode();\r\n\r\n    \r\n// }\r\n\r\n// const deleteNode = () => {\r\n//     let r = 1;\r\n//     const animate = () => {\r\n//         let id = requestAnimationFrame(animate);\r\n//         console.log(r)\r\n//         if (r <= 20) {\r\n//             document.getElementById('btn-pop').disabled = true;\r\n//             r += 0.5;\r\n//             c.beginPath();\r\n//             c.arc(stack.peek().x, stack.peek().y, r, 0, Math.PI*2, false);\r\n//             c.fillStyle = \"#FF0000\";\r\n//             c.fill();\r\n//         }\r\n//         else {\r\n//             // Erase\r\n//             cancelAnimationFrame(id);\r\n//             c.clearRect(stack.peek().x, stack.peek().y, canvas.width, canvas.height);\r\n//             c.clearRect(stack.peek().x, stack.peek().y, -canvas.width, canvas.height);\r\n//             c.clearRect(stack.peek().x, stack.peek().y, -canvas.width, -45);\r\n//             c.clearRect(stack.peek().x, stack.peek().y, canvas.width, -45);\r\n\r\n//             // New arrowheads\r\n//             let fromX = stack.peek().x, fromY = stack.peek().y;\r\n//             c.beginPath();\r\n//             c.moveTo(fromX, fromY-45);\r\n//             c.lineTo(fromX+5*Math.cos(45), (fromY-45)-5*Math.sin(45)); // Right arrowhead\r\n//             c.stroke();\r\n//             c.closePath();\r\n//             c.beginPath();\r\n//             c.moveTo(fromX, fromY-45);\r\n//             c.lineTo(fromX-5*Math.cos(45), (fromY-45)-5*Math.sin(45)); // Left arrowhead\r\n//             c.stroke();\r\n//             c.closePath();\r\n\r\n//             // \"NULL\"\r\n//             c.fillText(\"NULL\", fromX-10, fromY-30);\r\n\r\n//             stack.pop();\r\n\r\n//             if (stack.elements.length > 1)\r\n//                 document.getElementById('btn-pop').disabled = false;\r\n\r\n//             c.fillStyle = \"#000\"\r\n//         }\r\n//     }\r\n//     animate();\r\n// }\r\n"]}